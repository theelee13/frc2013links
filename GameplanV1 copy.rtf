{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural

\f0\fs24 \cf0 Using java's rectangle class, we can create a virtual field of length y inches (the length of the actual field) and width x inches (width). This way, we can track every movement of our robot and translate it into a (double x, double y) pair, which can be represented on the virtual field. We will have a rectangle in the middle of the field, the Golden Box. \
\
Assuming GB = Golden Box, and R= robot's x,y, then\'85\
\
if R.intersects(GB) \{\
	prepare for shooting.\
\}\
\
now shooting. Look for the top left coordinate, then move right until halfway. This will account for the amount of inches that the frisbee will always drop in-air while flying, from the golden box. \
\
In order to make this happen, the shooting mechanism should be able to rotate, otherwise, if we rely on the whole robot to move in order to work, we may hit some inaccuracy. \
\
Drawing coming soon.}